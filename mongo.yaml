---
## Generate a key
# openssl rand -base64 741 > mongodb-keyfile
## Create k8s secrets
# kubectl create secret generic mongo-key --from-file=mongodb-keyfile
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      role: mongo
  serviceName: mongo
  replicas: 3
  template:
    metadata:
      labels:
        environment: test
        role: mongo
    spec:
      containers:
        -
          command:
            - /bin/sh
            - "-c"
            - |
              if [ -f /data/db/admin-user.lock ]; then
                mongod --replSet rs0 --clusterAuthMode keyFile --keyFile /etc/secrets-volume/mongodb-keyfile --setParameter authenticationMechanisms=SCRAM-SHA-1;
              else
                mongod --auth;
              fi;
          image: "mongo:3.4.9"
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - "-c"
                  - |
                    if [ ! -f /data/db/admin-user.lock ]; then
                      sleep 5;
                      touch /data/db/admin-user.lock
                      if [ "$HOSTNAME" = "mongo-0" ]; then
                        mongo --eval 'db = db.getSiblingDB("admin"); db.createUser({ user: "admin", pwd: "password", roles: [{ role: "root", db: "admin" }]});';
                      fi;
                      mongod --shutdown;
                    fi;
          name: mongo
          ports:
            -
              containerPort: 27017
          volumeMounts:
            -
              mountPath: /etc/secrets-volume
              name: mongo-key
              readOnly: true
            -
              mountPath: /data/db
              name: mongo-persistent-storage
        -
          env:
            -
              name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=test"
            -
              name: MONGODB_USERNAME
              value: admin
            -
              name: MONGODB_PASSWORD
              value: password
            -
              name: MONGODB_DATABASE
              value: admin
          image: cvallance/mongo-k8s-sidecar
          name: mongo-sidecar
      terminationGracePeriodSeconds: 10
      volumes:
        -
          name: mongo-key
          secret:
            defaultMode: 256
            secretName: mongo-key
  volumeClaimTemplates:
    -
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: default
        name: mongo-persistent-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi

